package controller
import android.content.Context
import android.content.SharedPreferences
import android.util.Base64
import android.util.Log
import secure.encrypt_saveInter
import java.nio.charset.StandardCharsets
import java.security.KeyStore
import javax.crypto.Cipher
import javax.crypto.SecretKey

class encrypt_save : encrypt_saveInter {
    override fun saveProcess(accessToken: String, context: Context) {
        try {
            val sharedPrefs: SharedPreferences =
                context.getSharedPreferences("SecureStorage", Context.MODE_PRIVATE)
            // Encrypt process
            val keyStore = KeyStore.getInstance("AndroidKeyStore")
            keyStore.load(null)
            val key = keyStore.getKey("MySecureKey", null) as SecretKey
            val cipher = Cipher.getInstance("AES/GCM/NoPadding")
            cipher.init(Cipher.ENCRYPT_MODE, key)
            val iv = cipher.iv // Get the IV generated by the cipher
            val ciphertext = cipher.doFinal(accessToken.toByteArray(StandardCharsets.UTF_8)) // Encrypted

            // Save IV and ciphertext
            sharedPrefs.edit()
                .putString("ENCRYPTED_DATA", Base64.encodeToString(ciphertext, Base64.NO_WRAP))
                .putString("IV", Base64.encodeToString(iv, Base64.NO_WRAP))
                .apply()
        } catch (e: Exception) {
            e.printStackTrace()
            Log.e("TAG","Error occurred whien encrypting and saving token (encrypt_save.kt) : " + e.toString())
            throw Exception("Error occurred whien encrypting and saving token (encrypt_save.kt) : " + e.toString())
        }
    }
}